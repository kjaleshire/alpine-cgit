name: Docker Image CI

on:
  schedule:
    - cron: '0 0 * * *'
  pull_request:
    branches:
      - 'master'
    paths-ignore:
      - '**.md'
  push:
    branches:
      - 'master'
    paths-ignore:
      - '**.md'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        architecture: [amd64, aarch64, armhf]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Prepare
        id: prep
        run: |
          echo ::set-output name=platform::linux/${{ matrix.architecture }}
          echo ::set-output name=tag::${GITHUB_REPOSITORY}:${{ matrix.architecture }}-${GITHUB_SHA:0:7}
          echo ::set-output name=build-args::ARCH=${{ matrix.architecture }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          platforms: ${{ steps.prep.outputs.platform }}
          build-args: ${{ steps.prep.outputs.build-args }}
          push: true
          tags: ${{ steps.prep.outputs.tag }}

  publish:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Create manifests
        env:
          DOCKER_CLI_EXPERIMENTAL: enabled
        run: |
          IMAGE=${GITHUB_REPOSITORY}
          TAG=${GITHUB_SHA:0:7}
          docker manifest create ${IMAGE}:${TAG} ${IMAGE}:amd64-${TAG} ${IMAGE}:armhf-${TAG} ${IMAGE}:aarch64-${TAG}
          docker manifest push   ${IMAGE}:${GITHUB_SHA:0:7}
          docker manifest create ${IMAGE}:latest ${IMAGE}:amd64-${TAG} ${IMAGE}:armhf-${TAG} ${IMAGE}:aarch64-${TAG}
          docker manifest push   ${IMAGE}:latest
